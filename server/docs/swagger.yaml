basePath: /v2
definitions:
  httputil.ErrBadRequest:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: Bad Request
        type: string
    type: object
  httputil.ErrInternalServer:
    properties:
      code:
        example: 500
        type: integer
      message:
        example: InternalServer
        type: string
    type: object
  httputil.ErrNotFound:
    properties:
      code:
        example: 404
        type: integer
      message:
        example: Not Found
        type: string
    type: object
  httputil.HTTPError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  model.AddAccount:
    properties:
      name:
        example: account name
        type: string
    type: object
  model.UpdateAccount:
    properties:
      name:
        example: account name
        type: string
    type: object
  model.User:
    properties:
      createdOn:
        type: string
      email:
        example: example@gmail.com
        type: string
      pasword:
        example: password
        type: string
      username:
        example: kieuchicong
        type: string
    type: object
host: petstore.swagger.io
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /accounts:
    get:
      consumes:
      - application/json
      description: get accounts
      parameters:
      - description: name search by q
        format: email
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.ErrBadRequest'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.ErrNotFound'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.ErrInternalServer'
      summary: List accounts
      tags:
      - User
    post:
      consumes:
      - application/json
      description: add by json account
      parameters:
      - description: Add account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.AddAccount'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.ErrBadRequest'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.ErrNotFound'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.ErrInternalServer'
      summary: Add an account
      tags:
      - User
  /accounts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete by account ID
      parameters:
      - description: Account ID
        format: int64
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.ErrBadRequest'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.ErrNotFound'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.ErrInternalServer'
      summary: Delete an account
      tags:
      - User
    get:
      consumes:
      - application/json
      description: get string by ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Show an account
      tags:
      - User
    patch:
      consumes:
      - application/json
      description: Update by json account
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/model.UpdateAccount'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.ErrBadRequest'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.ErrNotFound'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.ErrInternalServer'
      summary: Update an account
      tags:
      - User
  /accounts/{id}/images:
    post:
      consumes:
      - multipart/form-data
      description: Upload file
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      - description: account image
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.ErrBadRequest'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.ErrNotFound'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.ErrInternalServer'
      summary: Upload account image
      tags:
      - User
swagger: "2.0"
